"use strict";(self.webpackChunk_monorepolint_docs=self.webpackChunk_monorepolint_docs||[]).push([[115],{2305:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rules/must-satisfy-peer-dependencies","title":"mustSatisfyPeerDependencies","description":"Ensures that packages satisfy peer dependency requirements declared by their dependencies.","source":"@site/docs/rules/must-satisfy-peer-dependencies.md","sourceDirName":"rules","slug":"/rules/must-satisfy-peer-dependencies","permalink":"/docs/rules/must-satisfy-peer-dependencies","draft":false,"unlisted":false,"editUrl":"https://github.com/monorepolint/monorepolint/edit/main/packages/docs/docs/rules/must-satisfy-peer-dependencies.md","tags":[],"version":"current","frontMatter":{"title":"mustSatisfyPeerDependencies"},"sidebar":"docs","previous":{"title":"forceError","permalink":"/docs/rules/force-error"},"next":{"title":"nestedWorkspaces","permalink":"/docs/rules/nested-workspaces"}}');var r=s(1360),i=s(4533);const c={title:"mustSatisfyPeerDependencies"},o=void 0,a={},d=[{value:"Options",id:"options",level:3},{value:"Example",id:"example",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Ensures that packages satisfy peer dependency requirements declared by their dependencies."}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"skipUnparseableRanges"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If true, warn and skip dependency ranges that are unparseable. Otherwise, throw. Default is false."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependencyWhitelist"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An array of package names indicating which peer dependencies must be satisfied."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { mustSatisfyPeerDependencies } from "@monorepolint/rules";\nexport default {\n  rules: [\n    mustSatisfyPeerDependencies({\n      options: {\n        skipUnparseableRanges: false,\n        dependencyWhitelist: [\n          "react",\n          "react-dom",\n        ],\n      },\n    }),\n  ],\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/monorepolint/monorepolint/blob/main/packages/rules/src/mustSatisfyPeerDependencies.ts",children:"rule source"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4533:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(6364);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);