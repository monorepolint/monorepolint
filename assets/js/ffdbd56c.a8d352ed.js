"use strict";(self.webpackChunk_monorepolint_docs=self.webpackChunk_monorepolint_docs||[]).push([[233],{6206:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(4349);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}},7033:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rules/standard-tsconfig","title":"standardTsconfig","description":"Special case of the File Contents rule for typescript configs. Using a template file for the typescript config, auto discover ands adds project references to the config","source":"@site/docs/rules/standard-tsconfig.md","sourceDirName":"rules","slug":"/rules/standard-tsconfig","permalink":"/docs/rules/standard-tsconfig","draft":false,"unlisted":false,"editUrl":"https://github.com/monorepolint/monorepolint/edit/main/packages/docs/docs/rules/standard-tsconfig.md","tags":[],"version":"current","frontMatter":{"title":"standardTsconfig"},"sidebar":"docs","previous":{"title":"requireDependency","permalink":"/docs/rules/require-dependency"}}');var i=s(4489),o=s(6206);const c={title:"standardTsconfig"},r=void 0,l={},d=[{value:"Options",id:"options",level:3},{value:"Example",id:"example",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Special case of the File Contents rule for typescript configs. Using a template file for the typescript config, auto discover ands adds project references to the config"}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"file"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Name of the file. Defaults to ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"generator"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Function that can generate the config"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tsconfigReferenceFile"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["String to append to each project reference path. Useful if project references have a non-standard ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," path. Ex: ",(0,i.jsx)(n.code,{children:"tsconfig.build.json"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"template"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Expected config contents"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"templateFile"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Path to a file to use as a template"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"excludedReferences"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"List of references to exclude"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"additionalReferences"})," (Optional)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["List of additional references to include beyond the ones coming from explicit dependencies in ",(0,i.jsx)(n.code,{children:"package.json"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Exactly one of ",(0,i.jsx)(n.code,{children:"generator"}),", ",(0,i.jsx)(n.code,{children:"template"}),", or ",(0,i.jsx)(n.code,{children:"templateFile"})," needs to be specified."]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { standardTsconfig } from "@monorepolint/rules";\nexport default {\n  rules: [\n    standardTsconfig({\n      options: {\n        templateFile: "./templates/tsconfig.json",\n      },\n    }),\n  ],\n};\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/monorepolint/monorepolint/blob/main/packages/rules/src/standardTsconfig.ts",children:"rule source"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);