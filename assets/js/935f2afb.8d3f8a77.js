"use strict";(self.webpackChunk_monorepolint_docs=self.webpackChunk_monorepolint_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Introduction","collapsed":false,"items":[{"type":"link","label":"Getting Started with Monorepolint","href":"/docs/","docId":"getting-started","unlisted":false},{"type":"link","label":"Configuration File","href":"/docs/config","docId":"config","unlisted":false},{"type":"link","label":"Command Line Interface","href":"/docs/cli","docId":"cli","unlisted":false},{"type":"link","label":"Writing Custom Rules","href":"/docs/writing-custom-rules","docId":"writing-custom-rules","unlisted":false}],"collapsible":true},{"type":"category","label":"Guides","collapsed":false,"items":[{"type":"link","label":"Putting your Config in a Package","href":"/docs/guides/config-in-a-package","docId":"guides/config-in-a-package","unlisted":false},{"type":"link","label":"Tips and Tricks","href":"/docs/tips-and-tricks","docId":"tips-and-tricks","unlisted":false}],"collapsible":true},{"type":"category","label":"Built-in Rules","items":[{"type":"link","label":"alphabeticalDependencies","href":"/docs/rules/alphabetical-dependencies","docId":"rules/alphabetical-dependencies","unlisted":false},{"type":"link","label":"alphabeticalScripts","href":"/docs/rules/alphabetical-scripts","docId":"rules/alphabetical-scripts","unlisted":false},{"type":"link","label":"bannedDependencies","href":"/docs/rules/banned-dependencies","docId":"rules/banned-dependencies","unlisted":false},{"type":"link","label":"consistentDependencies","href":"/docs/rules/consistent-dependencies","docId":"rules/consistent-dependencies","unlisted":false},{"type":"link","label":"consistentVersions","href":"/docs/rules/consistent-versions","docId":"rules/consistent-versions","unlisted":false},{"type":"link","label":"fileContents","href":"/docs/rules/file-contents","docId":"rules/file-contents","unlisted":false},{"type":"link","label":"mustSatisfyPeerDependencies","href":"/docs/rules/must-satisfy-peer-dependencies","docId":"rules/must-satisfy-peer-dependencies","unlisted":false},{"type":"link","label":"nestedWorkspaces","href":"/docs/rules/nested-workspaces","docId":"rules/nested-workspaces","unlisted":false},{"type":"link","label":"packageEntry","href":"/docs/rules/package-entry","docId":"rules/package-entry","unlisted":false},{"type":"link","label":"packageOrder","href":"/docs/rules/package-order","docId":"rules/package-order","unlisted":false},{"type":"link","label":"packageScript","href":"/docs/rules/package-script","docId":"rules/package-script","unlisted":false},{"type":"link","label":"requireDependency","href":"/docs/rules/require-dependency","docId":"rules/require-dependency","unlisted":false},{"type":"link","label":"standardTsconfig","href":"/docs/rules/standard-tsconfig","docId":"rules/standard-tsconfig","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"cli":{"id":"cli","title":"Command Line Interface","description":"Print errors for non-standard packages:","sidebar":"docs"},"config":{"id":"config","title":"Configuration File","description":"Monorepolint (mrl) requires a configuration file located at the root of your monorepo, named .monorepolint.config.mjs. This file serves as the central configuration for your project, allowing you to maintain consistency across your sub-projects.","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting Started with Monorepolint","description":"Monorepolint is a robust and versatile tool designed to maintain homogeneity and predictability within your monorepo. It streamlines the management of monorepo structures by ensuring proper configuration and consistent organization across your entire project.","sidebar":"docs"},"guides/config-in-a-package":{"id":"guides/config-in-a-package","title":"Putting your Config in a Package","description":"Reasons you may want to put your config in a package:","sidebar":"docs"},"rules/alphabetical-dependencies":{"id":"rules/alphabetical-dependencies","title":"alphabeticalDependencies","description":"Ensures that all dependency blocks within a project are ordered alphabetically.","sidebar":"docs"},"rules/alphabetical-scripts":{"id":"rules/alphabetical-scripts","title":"alphabeticalScripts","description":"Ensures that all scripts within a project are ordered alphabetically.","sidebar":"docs"},"rules/banned-dependencies":{"id":"rules/banned-dependencies","title":"bannedDependencies","description":"Overview","sidebar":"docs"},"rules/consistent-dependencies":{"id":"rules/consistent-dependencies","title":"consistentDependencies","description":"Enforce dependency versions are consistent with workspace root.","sidebar":"docs"},"rules/consistent-versions":{"id":"rules/consistent-versions","title":"consistentVersions","description":"Ensure that all packages use the same version of a dependency, when present in either dependencies or devDependencies.","sidebar":"docs"},"rules/file-contents":{"id":"rules/file-contents","title":"fileContents","description":"Enforce that each package has a file with certain contents enforced by either a template or generator.","sidebar":"docs"},"rules/must-satisfy-peer-dependencies":{"id":"rules/must-satisfy-peer-dependencies","title":"mustSatisfyPeerDependencies","description":"Ensures that packages satisfy peer dependency requirements declared by their dependencies.","sidebar":"docs"},"rules/nested-workspaces":{"id":"rules/nested-workspaces","title":"nestedWorkspaces","description":"Enforce that all workspaces in the repo are represented by the workspaces field in package.json.","sidebar":"docs"},"rules/package-entry":{"id":"rules/package-entry","title":"packageEntry","description":"source","sidebar":"docs"},"rules/package-order":{"id":"rules/package-order","title":"packageOrder","description":"Standardize entry order in package.json.","sidebar":"docs"},"rules/package-script":{"id":"rules/package-script","title":"packageScript","description":"Standardize package scripts. This is a separate rule from Package Entries to make it easy to have multiple package script rules apply to one package.","sidebar":"docs"},"rules/require-dependency":{"id":"rules/require-dependency","title":"requireDependency","description":"Require all packages to declare dependencies with specified versions.","sidebar":"docs"},"rules/standard-tsconfig":{"id":"rules/standard-tsconfig","title":"standardTsconfig","description":"Special case of the File Contents rule for typescript configs. Using a template file for the typescript config, auto discover ands adds project references to the config","sidebar":"docs"},"tips-and-tricks":{"id":"tips-and-tricks","title":"Tips and Tricks","description":"Standardizing package.json Exports","sidebar":"docs"},"writing-custom-rules":{"id":"writing-custom-rules","title":"Writing Custom Rules","description":"Custom rules are simply functions that return the correct shape (RuleModule from @monorepolint/config).","sidebar":"docs"}}}')}}]);