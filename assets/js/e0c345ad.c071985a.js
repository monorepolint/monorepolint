"use strict";(self.webpackChunk_monorepolint_docs=self.webpackChunk_monorepolint_docs||[]).push([[895],{7977:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rules/once-per-package","title":"oncePerPackage","description":"Overview","source":"@site/docs/rules/once-per-package.md","sourceDirName":"rules","slug":"/rules/once-per-package","permalink":"/docs/rules/once-per-package","draft":false,"unlisted":false,"editUrl":"https://github.com/monorepolint/monorepolint/edit/main/packages/docs/docs/rules/once-per-package.md","tags":[],"version":"current","frontMatter":{"title":"oncePerPackage"},"sidebar":"docs","previous":{"title":"nestedWorkspaces","permalink":"/docs/rules/nested-workspaces"},"next":{"title":"packageEntry","permalink":"/docs/rules/package-entry"}}');var s=o(612),t=o(7066);const c={title:"oncePerPackage"},a=void 0,i={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:3},{value:"Reference",id:"reference",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"oncePerPackage"})," rule is a helper rule for establishing that a set of rules is only applied once per package."]}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Will only trigger when the rule runs on package more than once for a given ",(0,s.jsx)(n.code,{children:"singletonKey"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Below is an example of how to implement the ",(0,s.jsx)(n.code,{children:"oncePerPackage"})," rule in your project:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'import { forceError } from "@monorepolint/rules";\n\nexport default {\n  rules: [\n    oncePerPackage({\n      options: {\n        singletonKey: "a",\n        customMessage: "will not trigger",\n      },\n    }),\n    oncePerPackage({\n      options: {\n        singletonKey: "b",\n        customMessage: "will trigger but you won\'t see this message",\n      },\n    }),\n    oncePerPackage({\n      options: {\n        singletonKey: "b",\n        customMessage:\n          "will trigger and you will see this message as its the second invocation",\n      },\n    }),\n  ],\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.p,{children:["For more information and to view the source code of this rule, please visit the ",(0,s.jsx)(n.a,{href:"https://github.com/monorepolint/monorepolint/blob/main/packages/rules/src/oncePerPackage.ts",children:"rule source"})," in the monorepolint repository."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},7066:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>a});var r=o(4344);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);